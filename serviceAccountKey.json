import express from "express";
import bodyParser from "body-parser";
import admin from "firebase-admin";
import fs from "fs";

// Firebase Admin init
const serviceAccount = JSON.parse(
  fs.readFileSync("./serviceAccountKey.json", "utf8")
);

admin.initializeApp({
  credential: admin.credential.cert(serviceAccount),
  databaseURL: "https://giper-8fd92-default-rtdb.firebaseio.com"
});

const db = admin.database();
const app = express();
app.use(bodyParser.json());

// ðŸ“Œ Register (yangi user yaratish)
app.post("/register", async (req, res) => {
  const { username, password, country, currency } = req.body;
  if (!username || !password) {
    return res.status(400).json({ status: "error", message: "Missing data" });
  }

  const ref = db.ref("users/" + username);
  const snapshot = await ref.get();

  if (snapshot.exists()) {
    return res.json({ status: "error", message: "User already exists" });
  }

  await ref.set({
    username,
    password,
    balance: 0,
    country: country || "Uzbekistan",
    currency: currency || "UZS"
  });

  return res.json({
    status: "ok",
    username,
    balance: 0,
    country: country || "Uzbekistan",
    currency: currency || "UZS"
  });
});

// ðŸ“Œ Login (mavjud userni tekshirish)
app.post("/login", async (req, res) => {
  const { username, password } = req.body;
  if (!username || !password) {
    return res.status(400).json({ status: "error", message: "Missing login data" });
  }

  const ref = db.ref("users/" + username);
  const snapshot = await ref.get();

  if (!snapshot.exists()) {
    return res.json({ status: "error", message: "User not found" });
  }

  const user = snapshot.val();
  if (user.password !== password) {
    return res.json({ status: "error", message: "Wrong password" });
  }

  return res.json({
    status: "ok",
    username: user.username,
    balance: user.balance,
    country: user.country,
    currency: user.currency
  });
});

// ðŸ“Œ Balance (username boâ€˜yicha olish)
app.get("/balance", async (req, res) => {
  const { username } = req.query;
  if (!username) {
    return res.status(400).json({ status: "error", message: "Missing username" });
  }

  const ref = db.ref("users/" + username);
  const snapshot = await ref.get();

  if (!snapshot.exists()) {
    return res.json({ status: "error", message: "User not found" });
  }

  const user = snapshot.val();
  return res.json({
    status: "ok",
    username: user.username,
    balance: user.balance,
    currency: user.currency
  });
});

// Start server
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log("Server running on port " + PORT);
});
